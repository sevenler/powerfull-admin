define('node_modules/react-router/lib/IndexRoute', function(require, exports, module) {

  'use strict';
  
  exports.__esModule = true;
  
  var _createReactClass = require('node_modules/create-react-class/index');
  
  var _createReactClass2 = _interopRequireDefault(_createReactClass);
  
  var _propTypes = require('node_modules/prop-types/index');
  
  var _routerWarning = require('node_modules/react-router/lib/routerWarning');
  
  var _routerWarning2 = _interopRequireDefault(_routerWarning);
  
  var _invariant = require('node_modules/invariant/browser');
  
  var _invariant2 = _interopRequireDefault(_invariant);
  
  var _RouteUtils = require('node_modules/react-router/lib/RouteUtils');
  
  var _InternalPropTypes = require('node_modules/react-router/lib/InternalPropTypes');
  
  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
  
  /**
   * An <IndexRoute> is used to specify its parent's <Route indexRoute> in
   * a JSX route config.
   */
  /* eslint-disable react/require-render-return */
  var IndexRoute = (0, _createReactClass2.default)({
    displayName: 'IndexRoute',
  
    statics: {
      createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
        /* istanbul ignore else: sanity check */
        if (parentRoute) {
          parentRoute.indexRoute = (0, _RouteUtils.createRouteFromReactElement)(element);
        } else {
          'development' !== 'production' ? (0, _routerWarning2.default)(false, 'An <IndexRoute> does not make sense at the root of your route config') : void 0;
        }
      }
    },
  
    propTypes: {
      path: _InternalPropTypes.falsy,
      component: _InternalPropTypes.component,
      components: _InternalPropTypes.components,
      getComponent: _propTypes.func,
      getComponents: _propTypes.func
    },
  
    /* istanbul ignore next: sanity check */
    render: function render() {
      !false ? 'development' !== 'production' ? (0, _invariant2.default)(false, '<IndexRoute> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
    }
  });
  
  exports.default = IndexRoute;
  module.exports = exports['default'];

});
