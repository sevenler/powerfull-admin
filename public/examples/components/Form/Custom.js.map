{"version":3,"sources":["/examples/components/Form/Custom.jsx"],"names":[],"mappings":";;;;;AAAA,wDAA0B;AAC1B,uCAAsD;AAKtD;IAAyB,sCAAe;IAAxC;;IAmBA,CAAC;IAlBC,2BAAM,GAAN;QACQ,mBAA8B,EAA7B,gBAAK,EAAE,sBAAsB,CAAC;QAErC,OAAO,CACL;YACE,sLAA8B;YAE9B;;gBAAQ,KAAK,CAAK;YAElB,qCACE,SAAS,EAAC,iBAAiB,EAC3B,OAAO,EAAE,cAAM,eAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,EAA3C,CAA2C,+BAGxD,CACA,CACP,CAAC;IACJ,CAAC;IAlBG,UAAU;QAHf,gBAAQ,CAAC;YACR,IAAI,EAAE,QAAQ;SACf,CAAC;OACI,UAAU,CAmBf;IAAD,iBAAC;CAAA,CAnBwB,eAAK,CAAC,SAAS,GAmBvC;AAKD;IAA6B,0CAAe;IAA5C;;IAOA,CAAC;IANC,+BAAM,GAAN;QACS,wBAAG,CAAe;QACzB,OAAO,CACL,2CAAM,GAAG,IAAI,kCAAkC,CAAO,CACvD,CAAC;IACJ,CAAC;IANG,cAAc;QAHnB,gBAAQ,CAAC;YACR,IAAI,EAAE,qBAAqB;SAC5B,CAAC;OACI,cAAc,CAOnB;IAAD,qBAAC;CAAA,CAP4B,eAAK,CAAC,SAAS,GAO3C;AAED,kBAAe;IACb,OAAO,EAAE,gDAAgD;IACzD,KAAK,EAAE,SAAS;IAChB,IAAI,EAAE;QACJ;YACE,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,YAAY;YAClB,GAAG,EAAE,wCAAwC;YAC7C,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,QAAQ;oBACd,KAAK,EAAE,IAAI;oBACX,OAAO,EAAE,IAAI;iBACd;aACF;YACD,QAAQ,EAAE;gBACR;oBACE,IAAI,EAAE,GAAG;oBACT,QAAQ,EAAE,UAAC,EAAiB;4BAAhB,gBAAK,EAAE,sBAAQ;wBAAM,QAC/B;4BACE,oNAAmC;4BAEnC;;gCAAQ,KAAK,CAAK;4BAElB,qCACE,SAAS,EAAC,iBAAiB,EAC3B,OAAO,EAAE,cAAM,eAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,EAA3C,CAA2C,+BAGxD,CACA,CACP;oBAbgC,CAahC;iBACF;gBAED;oBACE,IAAI,EAAE,SAAS;iBAChB;gBAED;oBACE,IAAI,EAAE,GAAG;oBACT,IAAI,EAAE,QAAQ;oBACd,KAAK,EAAE,aAAa;iBACrB;gBAED;oBACE,IAAI,EAAE,SAAS;iBAChB;gBAED;oBACE,IAAI,EAAE,aAAa;iBACpB;aACF;SACF;QAED;YACE,IAAI,EAAE,aAAa;YACnB,GAAG,EAAE,wBAAwB;SAC9B;KACF;CACF,CAAC","file":"Custom.js","sourcesContent":["import React from 'react';\nimport {FormItem, Renderer} from '../../../src/index';\n\n@FormItem({\n  type: 'custom'\n})\nclass MyFormItem extends React.Component {\n  render() {\n    const {value, onChange} = this.props;\n\n    return (\n      <div>\n        <p>这个是个自定义组件。通过注册渲染器的方式实现。</p>\n\n        <p>当前值：{value}</p>\n\n        <a\n          className=\"btn btn-default\"\n          onClick={() => onChange(Math.round(Math.random() * 10000))}\n        >\n          随机修改\n        </a>\n      </div>\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)my\\-renderer$/\n})\nclass CustomRenderer extends React.Component {\n  render() {\n    const {tip} = this.props;\n    return (\n      <div>{tip || '非 FormItem 类型的渲染器注册， 这种不能修改 form'}</div>\n    );\n  }\n}\n\nexport default {\n  $schema: 'https://houtai.baidu.com/v2/schemas/page.json#',\n  title: '自定义组件示例',\n  body: [\n    {\n      type: 'form',\n      mode: 'horizontal',\n      api: '/api/mock2/form/saveForm?waitSeconds=2',\n      actions: [\n        {\n          type: 'submit',\n          label: '提交',\n          primary: true\n        }\n      ],\n      controls: [\n        {\n          name: 'a',\n          children: ({value, onChange}) => (\n            <div>\n              <p>这个是个自定义组件。最简单直接的方式，不用注册直接使用。</p>\n\n              <p>当前值：{value}</p>\n\n              <a\n                className=\"btn btn-default\"\n                onClick={() => onChange(Math.round(Math.random() * 10000))}\n              >\n                随机修改\n              </a>\n            </div>\n          )\n        },\n\n        {\n          type: 'divider'\n        },\n\n        {\n          name: 'b',\n          type: 'custom',\n          label: '自定义FormItem'\n        },\n\n        {\n          type: 'divider'\n        },\n\n        {\n          type: 'my-renderer'\n        }\n      ]\n    },\n\n    {\n      type: 'my-renderer',\n      tip: '他能放 controls 里面，也能放外面。'\n    }\n  ]\n};\n"]}