{"version":3,"sources":["/examples/components/Form/Definitions.jsx"],"names":[],"mappings":"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","file":"Definitions.js","sourcesContent":["export default {\n  $schema: 'https://houtai.baidu.com/v2/schemas/page.json#',\n  definitions: {\n    options: {\n      type: 'combo',\n      multiple: true,\n      multiLine: true,\n      controls: [\n        {\n          type: 'group',\n          controls: [\n            {\n              label: '名称',\n              name: 'label',\n              type: 'text',\n              required: true\n            },\n\n            {\n              label: '值',\n              name: 'value',\n              type: 'text',\n              required: true\n            }\n          ]\n        },\n\n        {\n          $ref: 'options',\n          label: '子选项',\n          name: 'children',\n          addButtonText: '新增子选项'\n        }\n      ]\n    },\n\n    queryItem: {\n      type: 'combo',\n      multiple: true,\n      multiLine: true,\n      typeSwitchable: false,\n      conditions: [\n        {\n          label: '条件',\n          test: \"!data.hasOwnProperty('connect')\",\n          scaffold: {},\n          controls: [\n            {\n              type: 'group',\n              className: 'm-b-none',\n              controls: [\n                {\n                  name: 'key',\n                  type: 'text',\n                  placeholder: '字段名',\n                  required: true\n                },\n\n                {\n                  name: 'type',\n                  type: 'select',\n                  value: 0,\n                  options: [\n                    {\n                      label: 'int64',\n                      value: 0\n                    },\n                    {\n                      label: 'double64',\n                      value: 1\n                    },\n                    {\n                      label: 'string',\n                      value: 2\n                    },\n                    {\n                      label: 'version',\n                      value: 3\n                    }\n                  ]\n                },\n\n                {\n                  type: 'formula',\n                  name: 'opt',\n                  formula: '\"\"',\n                  condition: '${type}'\n                },\n\n                {\n                  name: 'opt',\n                  type: 'select',\n                  placeholder: '请选择',\n                  required: true,\n                  options: [\n                    {\n                      label: '>',\n                      value: '>',\n                      visibleOn: '~[0,1,3].indexOf(this.type)'\n                    },\n                    {\n                      label: '<',\n                      value: '<',\n                      visibleOn: '~[0,1,3].indexOf(this.type)'\n                    },\n                    {\n                      label: '==',\n                      value: '=='\n                    },\n                    {\n                      label: '>=',\n                      value: '>=',\n                      visibleOn: '~[0,1,3].indexOf(this.type)'\n                    },\n                    {\n                      label: '<=',\n                      value: '<=',\n                      visibleOn: '~[0,1,3].indexOf(this.type)'\n                    },\n                    {\n                      label: 'in',\n                      value: 'in'\n                    },\n                    {\n                      label: 'not in',\n                      value: 'not in'\n                    },\n                    {\n                      label: '!=',\n                      value: '!='\n                    }\n                  ]\n                },\n\n                {\n                  name: 'val',\n                  type: 'text',\n                  placeholder: '值',\n                  required: true,\n                  visibleOn:\n                    '~[\">\", \"<\", \">=\", \"<=\", \"==\", \"!=\"].indexOf(this.opt)'\n                },\n\n                {\n                  name: 'val',\n                  type: 'array',\n                  required: true,\n                  minLength: 1,\n                  items: {\n                    type: 'text',\n                    placeholder: '值',\n                    required: true\n                  },\n                  visibleOn: '~[\"in\", \"not in\"].indexOf(this.opt)'\n                }\n              ]\n            }\n          ]\n        },\n\n        {\n          label: '组合',\n          test: \"data.hasOwnProperty('connect')\",\n          scaffold: {\n            connect: '&',\n            exprs: [{}]\n          },\n          controls: [\n            {\n              type: 'button-group',\n              name: 'connect',\n              value: '&',\n              clearable: false,\n              size: 'xs',\n              options: [\n                {\n                  label: 'AND',\n                  value: '&'\n                },\n\n                {\n                  label: 'OR',\n                  value: '|'\n                }\n              ]\n            },\n            {\n              $ref: 'queryItem',\n              name: 'exprs',\n              minLength: 1,\n              value: [{}]\n            }\n          ]\n        }\n      ]\n    },\n\n    queryGroup: {\n      type: 'combo',\n      multiple: false,\n      multiLine: true,\n      controls: [\n        {\n          type: 'button-group',\n          name: 'connect',\n          value: '&',\n          // label: \"连接方式\",\n          // mode: 'inline',\n          clearable: false,\n          size: 'sm',\n          options: [\n            {\n              label: 'AND',\n              value: '&'\n            },\n\n            {\n              label: 'OR',\n              value: '|'\n            }\n          ]\n        },\n        {\n          $ref: 'queryItem',\n          name: 'exprs',\n          minLength: 1,\n          value: [{}]\n        }\n      ]\n    }\n  },\n  type: 'page',\n  title: '引用',\n  body: [\n    '<p>引用可以用来减少重复的结构定义，<code>最主要的是可以用来实现结构的递归定义</code>。</p>',\n\n    {\n      type: 'form',\n      api: '/api/mock/saveForm',\n      mode: 'horizontal',\n      controls: [\n        {\n          $ref: 'options',\n          name: 'options',\n          value: [\n            {\n              label: '选项1',\n              value: '1'\n            }\n          ],\n          minLength: 1,\n          label: '选项配置'\n        }\n      ]\n    },\n\n    {\n      type: 'form',\n      api: '/api/mock/saveForm',\n      controls: [\n        {\n          $ref: 'queryGroup',\n          name: 'q',\n          value: {},\n          label: 'Query'\n        },\n        {\n          type: 'static',\n          name: 'q',\n          label: '当前值',\n          tpl: '<pre>${q|json}</pre>'\n        }\n      ]\n    }\n  ]\n};\n"]}