{"version":3,"sources":["/examples/polyfills/Array.find.ts"],"names":[],"mappings":";;AAAA,2DAA2D;AAC3D,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE;IACzB,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE;QAC7C,KAAK,EAAE,UAAS,SAAS;YACvB,sCAAsC;YACtC,IAAI,IAAI,IAAI,IAAI,EAAE;gBAChB,MAAM,IAAI,SAAS,CAAC,+BAA+B,CAAC,CAAC;aACtD;YAED,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAErB,gDAAgD;YAChD,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;YAEzB,qEAAqE;YACrE,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE;gBACnC,MAAM,IAAI,SAAS,CAAC,8BAA8B,CAAC,CAAC;aACrD;YAED,yEAAyE;YACzE,IAAI,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAE3B,iBAAiB;YACjB,IAAI,CAAC,GAAG,CAAC,CAAC;YAEV,2BAA2B;YAC3B,OAAO,CAAC,GAAG,GAAG,EAAE;gBACd,8BAA8B;gBAC9B,iCAAiC;gBACjC,0EAA0E;gBAC1E,2CAA2C;gBAC3C,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClB,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;oBACzC,OAAO,MAAM,CAAC;iBACf;gBACD,sBAAsB;gBACtB,CAAC,EAAE,CAAC;aACL;YAED,uBAAuB;YACvB,OAAO,SAAS,CAAC;QACnB,CAAC;QACD,YAAY,EAAE,IAAI;QAClB,QAAQ,EAAE,IAAI;KACf,CAAC,CAAC;CACJ","file":"Array.find.js","sourcesContent":["// https://tc39.github.io/ecma262/#sec-array.prototype.find\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function');\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n\n      // 5. Let k be 0.\n      var k = 0;\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n\n      // 7. Return undefined.\n      return undefined;\n    },\n    configurable: true,\n    writable: true\n  });\n}\n"]}