{"version":3,"sources":["/examples/polyfills/Array.from.ts"],"names":[],"mappings":"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","file":"Array.from.js","sourcesContent":["if (!Array.from) {\n  Array.from = (function() {\n    var toStr = Object.prototype.toString;\n    var isCallable = function(fn) {\n      return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n    };\n    var toInteger = function(value) {\n      var number = Number(value);\n      if (isNaN(number)) {\n        return 0;\n      }\n      if (number === 0 || !isFinite(number)) {\n        return number;\n      }\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n    };\n    var maxSafeInteger = Math.pow(2, 53) - 1;\n    var toLength = function(value) {\n      var len = toInteger(value);\n      return Math.min(Math.max(len, 0), maxSafeInteger);\n    };\n\n    // The length property of the from method is 1.\n    return function from(arrayLike /*, mapFn, thisArg */) {\n      // 1. Let C be the this value.\n      var C = this;\n\n      // 2. Let items be ToObject(arrayLike).\n      var items = Object(arrayLike);\n\n      // 3. ReturnIfAbrupt(items).\n      if (arrayLike == null) {\n        throw new TypeError(\n          'Array.from requires an array-like object - not null or undefined'\n        );\n      }\n\n      // 4. If mapfn is undefined, then let mapping be false.\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n      var T;\n      if (typeof mapFn !== 'undefined') {\n        // 5. else\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n        if (!isCallable(mapFn)) {\n          throw new TypeError(\n            'Array.from: when provided, the second argument must be a function'\n          );\n        }\n\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 2) {\n          T = arguments[2];\n        }\n      }\n\n      // 10. Let lenValue be Get(items, \"length\").\n      // 11. Let len be ToLength(lenValue).\n      var len = toLength(items.length);\n\n      // 13. If IsConstructor(C) is true, then\n      // 13. a. Let A be the result of calling the [[Construct]] internal method\n      // of C with an argument list containing the single item len.\n      // 14. a. Else, Let A be ArrayCreate(len).\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n      // 16. Let k be 0.\n      var k = 0;\n      // 17. Repeat, while k < lenâ€¦ (also steps a - h)\n      var kValue;\n      while (k < len) {\n        kValue = items[k];\n        if (mapFn) {\n          A[k] =\n            typeof T === 'undefined'\n              ? mapFn(kValue, k)\n              : mapFn.call(T, kValue, k);\n        } else {\n          A[k] = kValue;\n        }\n        k += 1;\n      }\n      // 18. Let putStatus be Put(A, \"length\", len, true).\n      A.length = len;\n      // 20. Return A.\n      return A;\n    };\n  })();\n}\n"]}