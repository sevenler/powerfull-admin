{"version":3,"sources":["/src/renderers/Copyable.tsx"],"names":[],"mappings":";;;AAAA;;;GAGG;;;AAEH,wDAA0B;AAG1B,4FAA0D;AAE1D,oCAAoC;AAgBvB,mBAAW,GAAG,cAAM,iBAAC,SAAmC;IACnE;QAAiC,8CAAuC;QAAxE;;QAwCA,CAAC;QAtCC,wCAAW,GAAX,UAAY,OAAe;YAClB,wBAAG,CAAe;YACzB,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChC,CAAC;QACD,mCAAM,GAAN;YACQ,mBAOQ,EANZ,sBAAQ,EACR,cAAI,EACJ,wBAAS,EACT,cAAI,EACJ,gBAAK,EACL,kBACY,CAAC;YAEf,IAAI,QAAQ,IAAI,CAAC,KAAK,EAAE;gBACtB,IAAM,OAAO,GAAG,YAAM,CACnB,QAA2B,CAAC,OAAO,IAAI,IAAI,GAAG,IAAI,GAAG,UAAU,EAChE,IAAI,CACL,CAAC;gBACF,IAAI,OAAO,EAAE;oBACX,OAAO,CACL,8BAAC,SAAS,uBACJ,IAAI,CAAC,KAAK,IACd,SAAS,EAAE,EAAE,CAAC,iBAAiB,EAAE,SAAS,CAAC;wBAE3C,8BAAC,SAAS,uBAAK,IAAI,CAAC,KAAK,IAAE,gBAAgB,EAAE,EAAE,EAAE,KAAK,UAAG;wBACzD,qCACE,GAAG,EAAC,UAAU,kBACD,0BAAM,EACnB,SAAS,EAAE,EAAE,CAAC,+BAA+B,CAAC,EAC9C,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,GAC7C,CACQ,CACb,CAAC;iBACH;aACF;YACD,OAAO,8BAAC,SAAS,uBAAK,IAAI,CAAC,KAAK,EAAI,CAAC;QACvC,CAAC;QAtCM,oCAAiB,GAAG,SAAS,CAAC;QAuCvC,yBAAC;KAAA,CAxCgC,eAAK,CAAC,aAAa,GAwCnD;IACD,iCAAmB,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;IACnD,OAAO,kBAAkB,CAAC;AAC5B,CAAC,EA5CgC,CA4ChC,CAAC;AAEF,kBAAe,mBAAW,CAAC","file":"Copyable.js","sourcesContent":["/**\n * @file scoped.jsx.\n * @author fex\n */\n\nimport React from 'react';\nimport {RendererProps} from '../factory';\nimport cx from 'classnames';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nimport Button from '../components/Button';\nimport {filter} from '../utils/tpl';\n\nexport interface CopyableConfig {}\n\nexport interface CopyableConfig {\n  icon?: string;\n  content?: string;\n  [propName: string]: any;\n}\n\nexport interface CopyableProps extends RendererProps {\n  name?: string;\n  label?: string;\n  copyable: boolean | CopyableConfig;\n}\n\nexport const HocCopyable = () => (Component: React.ComponentType<any>): any => {\n  class QuickEditComponent extends React.PureComponent<CopyableProps, any> {\n    static ComposedComponent = Component;\n    handleClick(content: string) {\n      const {env} = this.props;\n      env.copy && env.copy(content);\n    }\n    render() {\n      const {\n        copyable,\n        name,\n        className,\n        data,\n        noHoc,\n        classnames: cx\n      } = this.props;\n\n      if (copyable && !noHoc) {\n        const content = filter(\n          (copyable as CopyableConfig).content || '${' + name + ' | raw }',\n          data\n        );\n        if (content) {\n          return (\n            <Component\n              {...this.props}\n              className={cx(`Field--copyable`, className)}\n            >\n              <Component {...this.props} wrapperComponent={''} noHoc />\n              <i\n                key=\"edit-btn\"\n                data-tooltip=\"点击复制\"\n                className={cx('Field-copyBtn fa fa-clipboard')}\n                onClick={this.handleClick.bind(this, content)}\n              />\n            </Component>\n          );\n        }\n      }\n      return <Component {...this.props} />;\n    }\n  }\n  hoistNonReactStatic(QuickEditComponent, Component);\n  return QuickEditComponent;\n};\n\nexport default HocCopyable;\n"]}