{"version":3,"sources":["/src/renderers/Form/Item.tsx"],"names":[],"mappings":"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","file":"Item.js","sourcesContent":["import React from 'react';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nimport {IFormItemStore, IFormStore} from '../../store/form';\nimport {reaction} from 'mobx';\n\nimport {\n  RendererProps,\n  registerRenderer,\n  TestFunc,\n  RendererConfig,\n  HocStoreFactory\n} from '../../factory';\nimport {anyChanged, ucFirst, getWidthRate, autobind} from '../../utils/helper';\nimport {observer} from 'mobx-react';\nimport {FormHorizontal, FormSchema} from '.';\nimport {Schema} from '../../types';\nimport {filter} from '../../utils/tpl';\n\nexport interface FormItemBasicConfig extends Partial<RendererConfig> {\n  type?: string;\n  wrap?: boolean;\n  renderLabel?: boolean;\n  renderDescription?: boolean;\n  test?: RegExp | TestFunc;\n  storeType?: string;\n  validations?: string;\n  strictMode?: boolean;\n  descriptionClassName?: string;\n  storeExtendsData?: boolean;\n  sizeMutable?: boolean;\n  weight?: number;\n  extendsData?: boolean;\n\n  // 兼容老用法，新用法直接在 Component 里面定义 validate 方法即可。\n  validate?: (values: any, value: any) => string | boolean;\n}\n\n// 自己接收到属性。\nexport interface FormItemProps extends RendererProps {\n  name?: string;\n  formStore?: IFormStore;\n  formItem?: IFormItemStore;\n  formInited: boolean;\n  formMode: 'normal' | 'horizontal' | 'inline' | 'row' | 'default';\n  formHorizontal: FormHorizontal;\n  defaultSize?: 'xs' | 'sm' | 'md' | 'lg' | 'full';\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'full';\n  disabled: boolean;\n  btnDisabled: boolean;\n  defaultValue: any;\n  value: any;\n  prinstine: any;\n  setPrinstineValue: (value: any) => void;\n  onChange: (\n    value: any,\n    submitOnChange?: boolean,\n    changeImmediately?: boolean\n  ) => void;\n  onBulkChange: (\n    values: {[propName: string]: any},\n    submitOnChange?: boolean\n  ) => void;\n  addHook: (fn: Function, mode?: 'validate' | 'init' | 'flush') => () => void;\n  removeHook: (fn: Function, mode?: 'validate' | 'init' | 'flush') => void;\n  renderFormItems: (\n    schema: FormSchema,\n    region: string,\n    props: any\n  ) => JSX.Element;\n  onFocus: (e: any) => void;\n  onBlur: (e: any) => void;\n\n  formItemValue: any; // 不建议使用 为了兼容 v1\n  getValue: () => any; // 不建议使用 为了兼容 v1\n  setValue: (value: any, key: string) => void; // 不建议使用 为了兼容 v1\n\n  inputClassName?: string;\n  renderControl?: (props: FormControlProps) => JSX.Element;\n\n  inputOnly?: boolean;\n  renderLabel?: boolean;\n  renderDescription?: boolean;\n  sizeMutable?: boolean;\n  wrap?: boolean;\n  hint?: string;\n  description?: string;\n  descriptionClassName?: string;\n  // error 详情\n  errors?: {\n    [propName: string]: string;\n  };\n  // error string\n  error?: string;\n}\n\n// 下发下去的属性\nexport type FormControlProps = RendererProps & {\n  onOpenDialog: (schema: Schema, data: any) => Promise<any>;\n} & Exclude<\n    FormItemProps,\n    | 'inputClassName'\n    | 'renderControl'\n    | 'defaultSize'\n    | 'size'\n    | 'error'\n    | 'errors'\n    | 'hint'\n    | 'descriptionClassName'\n    | 'inputOnly'\n    | 'renderLabel'\n    | 'renderDescription'\n    | 'sizeMutable'\n    | 'wrap'\n  >;\n\nexport type FormItemComponent = React.ComponentType<FormItemProps>;\nexport type FormControlComponent = React.ComponentType<FormControlProps>;\n\nexport interface FormItemConfig extends FormItemBasicConfig {\n  component: FormControlComponent;\n}\n\nexport class FormItemWrap extends React.Component<FormItemProps> {\n  reaction: any;\n\n  componentWillMount() {\n    const {formItem: model} = this.props;\n\n    if (model) {\n      this.reaction = reaction(\n        () => `${model.errors.join('')}${model.isFocused}${model.dialogOpen}`,\n        () => this.forceUpdate()\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.reaction && this.reaction();\n  }\n\n  @autobind\n  handleFocus(e: any) {\n    const {formItem: model} = this.props;\n    model && model.focus();\n    this.props.onFocus && this.props.onFocus(e);\n  }\n\n  @autobind\n  handleBlur(e: any) {\n    const {formItem: model} = this.props;\n    model && model.blur();\n    this.props.onBlur && this.props.onBlur(e);\n  }\n\n  @autobind\n  async handleOpenDialog(schema: Schema, data: any) {\n    const {formItem: model} = this.props;\n    if (!model) {\n      return;\n    }\n\n    return new Promise(resolve =>\n      model.openDialog(schema, data, (result?: any) => resolve(result))\n    );\n  }\n\n  @autobind\n  handleDialogConfirm([values]: Array<any>) {\n    const {formItem: model} = this.props;\n    if (!model) {\n      return;\n    }\n\n    model.closeDialog(values);\n  }\n\n  @autobind\n  handleDialogClose() {\n    const {formItem: model} = this.props;\n    if (!model) {\n      return;\n    }\n    model.closeDialog();\n  }\n\n  renderControl() {\n    const {\n      inputClassName,\n      formItem: model,\n      classnames: cx,\n      children,\n      type,\n      renderControl,\n      formItemConfig,\n      sizeMutable,\n      size,\n      defaultSize,\n      ...rest\n    } = this.props;\n\n    if (renderControl) {\n      const controlSize = size || defaultSize;\n      return renderControl({\n        ...rest,\n        onOpenDialog: this.handleOpenDialog,\n        type,\n        classnames: cx,\n        formItem: model,\n        className: cx(\n          `Form-control`,\n          {\n            'is-inline': !!rest.inline,\n            'is-error': model && !model.valid,\n            [`Form-control--size${ucFirst(controlSize)}`]:\n              sizeMutable !== false &&\n              typeof controlSize === 'string' &&\n              !!controlSize &&\n              controlSize !== 'full'\n          },\n          inputClassName\n        )\n      });\n    }\n\n    return null;\n  }\n\n  renderHorizontal() {\n    let {\n      className,\n      classnames: cx,\n      description,\n      descriptionClassName,\n      captionClassName,\n      desc,\n      label,\n      labelClassName,\n      render,\n      required,\n      caption,\n      remark,\n      labelRemark,\n      env,\n      formItem: model,\n      renderLabel,\n      renderDescription,\n      hint,\n      data\n    } = this.props;\n\n    // 强制不渲染 label 的话\n    if (renderLabel === false) {\n      label = label === false ? false : '';\n    }\n\n    description = description || desc;\n    const horizontal = this.props.horizontal || this.props.formHorizontal;\n    const left = getWidthRate(horizontal.left);\n    const right = getWidthRate(horizontal.right);\n\n    return (\n      <div\n        className={cx(`Form-item Form-item--horizontal`, className, {\n          [`is-error`]: model && !model.valid,\n          [`is-required`]: required\n        })}\n      >\n        {label !== false ? (\n          <label\n            className={cx(\n              `Form-label`,\n              {\n                [`Form-itemColumn--${\n                  typeof horizontal.leftFixed === 'string'\n                    ? horizontal.leftFixed\n                    : 'normal'\n                }`]: horizontal.leftFixed,\n                [`Form-itemColumn--${left}`]: !horizontal.leftFixed\n              },\n              labelClassName\n            )}\n          >\n            <span>\n              {filter(label, data)}\n              {required ? <span className={cx(`Form-star`)}>*</span> : null}\n              {labelRemark\n                ? render('label-remark', {\n                    type: 'remark',\n                    tooltip: labelRemark,\n                    className: cx(`Form-labelRemark`),\n                    container:\n                      env && env.getModalContainer\n                        ? env.getModalContainer\n                        : undefined\n                  })\n                : null}\n            </span>\n          </label>\n        ) : null}\n\n        <div\n          className={cx(`Form-value`, {\n            // [`Form-itemColumn--offset${getWidthRate(horizontal.offset)}`]: !label && label !== false,\n            [`Form-itemColumn--${right}`]: !!right && right !== 12 - left\n          })}\n        >\n          {this.renderControl()}\n\n          {caption\n            ? render('caption', caption, {\n                className: cx(`Form-caption`, captionClassName)\n              })\n            : null}\n\n          {remark\n            ? render('remark', {\n                type: 'remark',\n                tooltip: remark,\n                className: cx(`Form-remark`),\n                container:\n                  env && env.getModalContainer\n                    ? env.getModalContainer\n                    : undefined\n              })\n            : null}\n\n          {hint && model && model.isFocused\n            ? render('hint', hint, {\n                className: cx(`Form-hint`)\n              })\n            : null}\n\n          {model && !model.valid ? (\n            <ul className={cx(`Form-feedback`)}>\n              {model.errors.map((msg: string, key: number) => (\n                <li key={key}>{msg}</li>\n              ))}\n            </ul>\n          ) : null}\n\n          {renderDescription !== false && description\n            ? render('description', description, {\n                className: cx(`Form-description`, descriptionClassName)\n              })\n            : null}\n        </div>\n      </div>\n    );\n  }\n\n  renderNormal() {\n    let {\n      className,\n      classnames: cx,\n      desc,\n      description,\n      label,\n      labelClassName,\n      render,\n      required,\n      caption,\n      remark,\n      labelRemark,\n      env,\n      descriptionClassName,\n      captionClassName,\n      formItem: model,\n      renderLabel,\n      renderDescription,\n      hint,\n      formMode,\n      data\n    } = this.props;\n\n    description = description || desc;\n\n    return (\n      <div\n        className={cx(`Form-item Form-item--${formMode}`, className, {\n          'is-error': model && !model.valid,\n          [`is-required`]: required\n        })}\n      >\n        {label && renderLabel !== false ? (\n          <label className={cx(`Form-label`, labelClassName)}>\n            <span>\n              {filter(label, data)}\n              {required ? <span className={cx(`Form-star`)}>*</span> : null}\n              {labelRemark\n                ? render('label-remark', {\n                    type: 'remark',\n                    tooltip: labelRemark,\n                    className: cx(`Form-lableRemark`),\n                    container:\n                      env && env.getModalContainer\n                        ? env.getModalContainer\n                        : undefined\n                  })\n                : null}\n            </span>\n          </label>\n        ) : null}\n\n        {this.renderControl()}\n\n        {caption\n          ? render('caption', caption, {\n              className: cx(`Form-caption`, captionClassName)\n            })\n          : null}\n\n        {remark\n          ? render('remark', {\n              type: 'remark',\n              className: cx(`Form-remark`),\n              tooltip: remark,\n              container:\n                env && env.getModalContainer ? env.getModalContainer : undefined\n            })\n          : null}\n\n        {hint && model && model.isFocused\n          ? render('hint', hint, {\n              className: cx(`Form-hint`)\n            })\n          : null}\n\n        {model && !model.valid ? (\n          <ul className={cx(`Form-feedback`)}>\n            {model.errors.map((msg: string, key: number) => (\n              <li key={key}>{msg}</li>\n            ))}\n          </ul>\n        ) : null}\n\n        {renderDescription !== false && description\n          ? render('description', description, {\n              className: cx(`Form-description`, descriptionClassName)\n            })\n          : null}\n      </div>\n    );\n  }\n\n  renderInline() {\n    let {\n      className,\n      classnames: cx,\n      desc,\n      description,\n      label,\n      labelClassName,\n      render,\n      required,\n      caption,\n      descriptionClassName,\n      captionClassName,\n      formItem: model,\n      remark,\n      labelRemark,\n      env,\n      hint,\n      renderLabel,\n      renderDescription,\n      data\n    } = this.props;\n\n    description = description || desc;\n\n    return (\n      <div\n        className={cx(`Form-item Form-item--inline`, className, {\n          'is-error': model && !model.valid,\n          [`is-required`]: required\n        })}\n      >\n        {label && renderLabel !== false ? (\n          <label className={cx(`Form-label`, labelClassName)}>\n            <span>\n              {filter(label, data)}\n              {required ? <span className={cx(`Form-star`)}>*</span> : null}\n              {labelRemark\n                ? render('label-remark', {\n                    type: 'remark',\n                    tooltip: labelRemark,\n                    className: cx(`Form-lableRemark`),\n                    container:\n                      env && env.getModalContainer\n                        ? env.getModalContainer\n                        : undefined\n                  })\n                : null}\n            </span>\n          </label>\n        ) : null}\n\n        <div className={cx(`Form-value`)}>\n          {this.renderControl()}\n\n          {caption\n            ? render('caption', caption, {\n                className: cx(`Form-caption`, captionClassName)\n              })\n            : null}\n\n          {remark\n            ? render('remark', {\n                type: 'remark',\n                className: cx(`Form-remark`),\n                tooltip: remark,\n                container:\n                  env && env.getModalContainer\n                    ? env.getModalContainer\n                    : undefined\n              })\n            : null}\n\n          {hint && model && model.isFocused\n            ? render('hint', hint, {\n                className: cx(`Form-hint`)\n              })\n            : null}\n\n          {model && !model.valid ? (\n            <ul className={cx(`Form-feedback`)}>\n              {model.errors.map((msg: string, key: number) => (\n                <li key={key}>{msg}</li>\n              ))}\n            </ul>\n          ) : null}\n\n          {renderDescription !== false && description\n            ? render('description', description, {\n                className: cx(`Form-description`, descriptionClassName)\n              })\n            : null}\n        </div>\n      </div>\n    );\n  }\n\n  renderRow() {\n    let {\n      className,\n      classnames: cx,\n      desc,\n      description,\n      label,\n      labelClassName,\n      render,\n      required,\n      caption,\n      remark,\n      labelRemark,\n      env,\n      descriptionClassName,\n      captionClassName,\n      formItem: model,\n      renderLabel,\n      renderDescription,\n      hint,\n      formMode,\n      data\n    } = this.props;\n\n    description = description || desc;\n\n    return (\n      <div\n        className={cx(`Form-item Form-item--${formMode}`, className, {\n          'is-error': model && !model.valid,\n          [`is-required`]: required\n        })}\n      >\n        <div className={cx('Form-rowInner')}>\n          {label && renderLabel !== false ? (\n            <label className={cx(`Form-label`, labelClassName)}>\n              <span>\n                {filter(label, data)}\n                {required ? <span className={cx(`Form-star`)}>*</span> : null}\n                {labelRemark\n                  ? render('label-remark', {\n                      type: 'remark',\n                      tooltip: labelRemark,\n                      className: cx(`Form-lableRemark`),\n                      container:\n                        env && env.getModalContainer\n                          ? env.getModalContainer\n                          : undefined\n                    })\n                  : null}\n              </span>\n            </label>\n          ) : null}\n\n          {this.renderControl()}\n\n          {caption\n            ? render('caption', caption, {\n                className: cx(`Form-caption`, captionClassName)\n              })\n            : null}\n\n          {remark\n            ? render('remark', {\n                type: 'remark',\n                className: cx(`Form-remark`),\n                tooltip: remark,\n                container:\n                  env && env.getModalContainer\n                    ? env.getModalContainer\n                    : undefined\n              })\n            : null}\n        </div>\n\n        {hint && model && model.isFocused\n          ? render('hint', hint, {\n              className: cx(`Form-hint`)\n            })\n          : null}\n\n        {model && !model.valid ? (\n          <ul className={cx('Form-feedback')}>\n            {model.errors.map((msg: string, key: number) => (\n              <li key={key}>{msg}</li>\n            ))}\n          </ul>\n        ) : null}\n\n        {description && renderDescription !== false\n          ? render('description', description, {\n              className: cx(`Form-description`, descriptionClassName)\n            })\n          : null}\n      </div>\n    );\n  }\n\n  render() {\n    const {formMode, inputOnly, wrap, render, formItem: model} = this.props;\n\n    if (wrap === false || inputOnly) {\n      return this.renderControl();\n    }\n\n    return (\n      <>\n        {formMode === 'inline'\n          ? this.renderInline()\n          : formMode === 'horizontal'\n          ? this.renderHorizontal()\n          : formMode === 'row'\n          ? this.renderRow()\n          : this.renderNormal()}\n        {model\n          ? render(\n              'modal',\n              {\n                type: 'dialog',\n                ...model.dialogSchema\n              },\n              {\n                show: model.dialogOpen,\n                onClose: this.handleDialogClose,\n                onConfirm: this.handleDialogConfirm,\n                data: model.dialogData\n              }\n            )\n          : null}\n      </>\n    );\n  }\n}\n\n// 白名单形式，只有这些属性发生变化，才会往下更新。\n// 除非配置  strictMode\nexport const detectProps = [\n  'formPristine', // 这个千万不能干掉。\n  'formInited',\n  'addable',\n  'addButtonClassName',\n  'addButtonText',\n  'addOn',\n  'btnClassName',\n  'btnLabel',\n  'btnDisabled',\n  'className',\n  'clearable',\n  'columns',\n  'columnsCount',\n  'controls',\n  'desc',\n  'description',\n  'disabled',\n  'draggable',\n  'editable',\n  'editButtonClassName',\n  'formHorizontal',\n  'formMode',\n  'hideRoot',\n  'horizontal',\n  'icon',\n  'inline',\n  'inputClassName',\n  'label',\n  'labelClassName',\n  'labelField',\n  'language',\n  'level',\n  'max',\n  'maxRows',\n  'min',\n  'minRows',\n  'multiLine',\n  'multiple',\n  'option',\n  'placeholder',\n  'removable',\n  'required',\n  'remark',\n  'hint',\n  'rows',\n  'searchable',\n  'showCompressOptions',\n  'size',\n  'step',\n  'showInput',\n  'unit',\n  'value',\n  'diffValue'\n];\n\nexport function asFormItem(config: Omit<FormItemConfig, 'component'>) {\n  return (Control: FormControlComponent) => {\n    // 兼容老的 FormItem 用法。\n    if (config.validate && !Control.prototype.validate) {\n      const fn = config.validate;\n      Control.prototype.validate = function() {\n        // console.warn('推荐直接在类中定义，而不是 FormItem HOC 的参数中传入。');\n        const host = {\n          input: this\n        };\n\n        return fn.apply(host, arguments);\n      };\n    } else if (config.validate) {\n      console.error(\n        'FormItem配置中的 validate 将不起作用，因为类的成员函数中已经定义了 validate 方法，将优先使用类里面的实现。'\n      );\n    }\n\n    if (config.storeType) {\n      Control = HocStoreFactory({\n        storeType: config.storeType,\n        extendsData: config.extendsData\n      })(observer(Control));\n      delete config.storeType;\n    }\n\n    // @observer\n    class FormItemRenderer extends FormItemWrap {\n      static defaultProps = {\n        className: '',\n        renderLabel: config.renderLabel,\n        renderDescription: config.renderDescription,\n        sizeMutable: config.sizeMutable,\n        wrap: config.wrap,\n        ...Control.defaultProps\n      };\n      static propsList: any = [\n        'value',\n        'defaultValue',\n        'onChange',\n        'setPrinstineValue',\n        'readOnly',\n        'strictMode',\n        ...((Control as any).propsList || [])\n      ];\n\n      static displayName = `FormItem${config.type ? `(${config.type})` : ''}`;\n      static ComposedComponent = Control;\n\n      ref: any;\n\n      constructor(props: FormItemProps) {\n        super(props);\n        this.refFn = this.refFn.bind(this);\n      }\n\n      componentWillMount() {\n        const {validations, formItem: model} = this.props;\n\n        // 组件注册的时候可能默认指定验证器类型\n        if (model && !validations && config.validations) {\n          model.config({\n            rules: config.validations\n          });\n        }\n\n        super.componentWillMount();\n      }\n\n      shouldComponentUpdate(nextProps: FormControlProps) {\n        if (nextProps.strictMode === false || config.strictMode === false) {\n          return true;\n        }\n\n        // 把可能会影响视图的白名单弄出来，减少重新渲染次数。\n        if (anyChanged(detectProps, this.props, nextProps)) {\n          return true;\n        }\n\n        return false;\n      }\n\n      getWrappedInstance() {\n        return this.ref;\n      }\n\n      refFn(ref: any) {\n        this.ref = ref;\n      }\n\n      renderControl() {\n        const {\n          inputClassName,\n          formItem: model,\n          classnames: cx,\n          children,\n          type,\n          size,\n          defaultSize,\n          ...rest\n        } = this.props;\n\n        const controlSize = size || defaultSize;\n\n        return (\n          <Control\n            {...rest}\n            onOpenDialog={this.handleOpenDialog}\n            size={config.sizeMutable !== false ? undefined : size}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            type={type}\n            classnames={cx}\n            ref={this.refFn}\n            formItem={model}\n            className={cx(\n              `Form-control`,\n              {\n                'is-inline': !!rest.inline,\n                'is-error': model && !model.valid,\n                [`Form-control--size${ucFirst(controlSize)}`]:\n                  config.sizeMutable !== false &&\n                  typeof controlSize === 'string' &&\n                  !!controlSize &&\n                  controlSize !== 'full'\n              },\n              inputClassName\n            )}\n          />\n        );\n      }\n    }\n\n    hoistNonReactStatic(FormItemRenderer, Control);\n    return FormItemRenderer;\n  };\n}\n\nexport function registerFormItem(config: FormItemConfig): RendererConfig {\n  let Control = asFormItem(config)(config.component);\n\n  return registerRenderer({\n    ...config,\n    name: config.name || `${config.type}-control`,\n    weight: typeof config.weight !== 'undefined' ? config.weight : -100, // 优先级高点\n    test:\n      config.test ||\n      new RegExp(\n        `(^|\\/)form(?:\\/.+)?\\/control\\/(?:\\d+\\/)?${config.type}$`,\n        'i'\n      ),\n    component: Control,\n    isFormItem: true\n  });\n}\n\nexport function FormItem(config: FormItemBasicConfig) {\n  return function(component: FormControlComponent): any {\n    const renderer = registerFormItem({\n      ...config,\n      component\n    });\n\n    return renderer.component as any;\n  };\n}\n\nexport default FormItem;\n"]}