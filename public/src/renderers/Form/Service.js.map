{"version":3,"sources":["/src/renderers/Form/Service.tsx"],"names":[],"mappings":";;;;;AAAA,wDAA0B;AAE1B,yCAAsD;AACtD,+DAAsD;AAEtD,uCAAmE;AAEnE,+CAAgE;AAShE;IAAqC,2CAAY;IAAjD;;IA8EA,CAAC;IA3EC,4CAAkB,GAAlB;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,OAAyB,CAAC;QAC9C,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,2CAAiB,GAAjB;QACQ,mBAAkC,EAAjC,0BAAU,EAAE,oBAAqB,CAAC;QAEzC,2BAA2B;QAC3B,gCAAgC;QAChC,IAAI,UAAU,KAAK,KAAK,EAAE;YACxB,iBAAM,iBAAiB,WAAE,CAAC;SAC3B;aAAM;YACL,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;SAC5C;IACH,CAAC;IAED,4CAAkB,GAAlB,UAAmB,SAAuB;QACjC,sCAAU,CAAe;QAChC,IAAI,UAAU,KAAK,KAAK,EAAE;YACxB,iBAAM,kBAAkB,YAAC,SAAS,CAAC,CAAC;SACrC;IACH,CAAC;IAED,8CAAoB,GAApB;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,OAAyB,CAAC;QAC9C,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAEjC,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;QACzC,UAAU,IAAI,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QACjD,iBAAM,oBAAoB,WAAE,CAAC;IAC/B,CAAC;IAED,oCAAU,GAAV;QACQ,mBAWQ,EAVZ,kBAAM,EACN,gBAAK,EACL,gBAAY,EACZ,sBAAQ,EACR,cAAI,EACJ,sBAAQ,EACR,oCAAe,EACf,sBAAQ,EACR,gBAAK,EACL,kBACY,CAAC;QAEf,IAAM,YAAY,GAAG,KAAK,CAAC,MAAM;YAC/B,MAAM,IAAI;YACV,QAAQ;YACR,IAAI;YACJ,QAAQ;SACT,CAAC;QACF,IACE,YAAY;YACZ,CAAC,YAAY,CAAC,IAAI;YAClB,CAAC,YAAY,CAAC,QAAQ,IAAI,YAAY,CAAC,IAAI,IAAI,YAAY,CAAC,QAAQ,CAAC;YACrE,eAAe,EACf;YACA,OAAO,CACL,uCACE,GAAG,EAAE,KAAK,CAAC,SAAS,IAAI,OAAO,EAC/B,SAAS,EAAE,EAAE,CAAC,YAAS,QAAQ,IAAI,QAAQ,CAAE,CAAC,IAE7C,eAAe,CAAC,YAAY,EAAE,UAAU,EAAE;gBACzC,KAAK;gBACL,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,MAAM;aACP,CAAC,CACE,CACP,CAAC;SACH;QAED,OAAO,iBAAM,UAAU,WAAE,CAAC;IAC5B,CAAC;IA5EM,2BAAW,GAAG,sBAAa,CAAC;IADxB,eAAe;QAP3B,kBAAQ,CAAC;YACR,IAAI,EAAE,4BAA4B;YAClC,MAAM,EAAE,CAAC,GAAG;YACZ,SAAS,EAAE,sBAAY,CAAC,IAAI;YAC5B,gBAAgB,EAAE,KAAK;YACvB,IAAI,EAAE,iBAAiB;SACxB,CAAC;OACW,eAAe,CA8E3B;IAAD,sBAAC;CAAA,CA9EoC,iBAAY,GA8EhD;AA9EY,0CAAe","file":"Service.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Renderer, RendererProps} from '../../factory';\nimport BasicService, {ServiceProps} from '../Service';\nimport {Schema} from '../../types';\nimport Scoped, {ScopedContext, IScopedContext} from '../../Scoped';\nimport {observer} from 'mobx-react';\nimport {ServiceStore, IServiceStore} from '../../store/service';\n\n@Renderer({\n  test: /(^|\\/)form\\/(.*)\\/service$/,\n  weight: -100,\n  storeType: ServiceStore.name,\n  storeExtendsData: false,\n  name: 'service-control'\n})\nexport class ServiceRenderer extends BasicService {\n  static contextType = ScopedContext;\n\n  componentWillMount() {\n    const scoped = this.context as IScopedContext;\n    scoped.registerComponent(this);\n  }\n\n  componentDidMount() {\n    const {formInited, addHook} = this.props;\n\n    // form层级下的所有service应该都会走这里\n    // 但是传入props有可能是undefined，所以做个处理\n    if (formInited !== false) {\n      super.componentDidMount();\n    } else {\n      addHook && addHook(this.initFetch, 'init');\n    }\n  }\n\n  componentDidUpdate(prevProps: ServiceProps) {\n    const {formInited} = this.props;\n    if (formInited !== false) {\n      super.componentDidUpdate(prevProps);\n    }\n  }\n\n  componentWillUnmount() {\n    const scoped = this.context as IScopedContext;\n    scoped.unRegisterComponent(this);\n\n    const removeHook = this.props.removeHook;\n    removeHook && removeHook(this.initFetch, 'init');\n    super.componentWillUnmount();\n  }\n\n  renderBody(): JSX.Element {\n    const {\n      render,\n      store,\n      body: schema,\n      controls,\n      tabs,\n      feildSet,\n      renderFormItems,\n      formMode,\n      $path,\n      classnames: cx\n    } = this.props;\n\n    const finnalSchema = store.schema ||\n      schema || {\n      controls,\n      tabs,\n      feildSet\n    };\n    if (\n      finnalSchema &&\n      !finnalSchema.type &&\n      (finnalSchema.controls || finnalSchema.tabs || finnalSchema.feildSet) &&\n      renderFormItems\n    ) {\n      return (\n        <div\n          key={store.schemaKey || 'forms'}\n          className={cx(`Form--${formMode || 'normal'}`)}\n        >\n          {renderFormItems(finnalSchema, 'controls', {\n            store,\n            data: store.data,\n            render\n          })}\n        </div>\n      );\n    }\n\n    return super.renderBody();\n  }\n}\n"]}