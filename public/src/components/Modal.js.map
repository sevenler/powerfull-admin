{"version":3,"sources":["/src/components/Modal.tsx"],"names":[],"mappings":"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","file":"Modal.js","sourcesContent":["/**\n * @file Modal\n * @description\n * @author fex\n */\n\nimport React from 'react';\nimport Transition, {\n  ENTERED,\n  ENTERING,\n  EXITING\n} from 'react-transition-group/Transition';\nimport {Portal} from 'react-overlays';\nimport cx from 'classnames';\nimport {current, addModal, removeModal} from './ModalManager';\nimport {ClassNamesFn, themeable} from '../theme';\n\nexport interface ModalProps {\n  className?: string;\n  contentClassName?: string;\n  size?: any;\n  overlay?: boolean;\n  onHide: () => void;\n  closeOnEsc?: boolean;\n  container?: any;\n  show?: boolean;\n  disabled?: boolean;\n  classPrefix: string;\n  classnames: ClassNamesFn;\n  onExited?: () => void;\n  onEntered?: () => void;\n}\nexport interface ModalState {}\nconst fadeStyles: {\n  [propName: string]: string;\n} = {\n  [ENTERING]: 'in',\n  [ENTERED]: 'in',\n  [EXITING]: 'out'\n};\nexport class Modal extends React.Component<ModalProps, ModalState> {\n  static defaultProps = {\n    container: document.body,\n    size: '',\n    overlay: true\n  };\n\n  componentDidMount() {\n    if (this.props.show) {\n      this.handleEntered();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.show) {\n      this.handleExited();\n    }\n  }\n\n  handleEntered = () => {\n    const onEntered = this.props.onEntered;\n    document.body.classList.add(`is-modalOpened`);\n    onEntered && onEntered();\n  };\n  handleExited = () => {\n    const onExited = this.props.onExited;\n    onExited && onExited();\n    setTimeout(() => {\n      document.querySelector('.amis-dialog-widget') ||\n        document.body.classList.remove(`is-modalOpened`);\n    }, 200);\n  };\n\n  modalRef = (ref: any) => {\n    const {classPrefix: ns} = this.props;\n    if (ref) {\n      addModal(this);\n      (ref as HTMLElement).classList.add(`${ns}Modal--${current()}th`);\n    } else {\n      removeModal();\n    }\n  };\n\n  render() {\n    const {\n      className,\n      contentClassName,\n      children,\n      container,\n      show,\n      size,\n      overlay,\n      classPrefix: ns\n    } = this.props;\n\n    return (\n      // @ts-ignore\n      <Portal container={container}>\n        <Transition\n          mountOnEnter\n          unmountOnExit\n          in={show}\n          timeout={500}\n          onExited={this.handleExited}\n          onEntered={this.handleEntered}\n        >\n          {(status: string) => (\n            <div\n              ref={this.modalRef}\n              role=\"dialog\"\n              className={cx(\n                `amis-dialog-widget ${ns}Modal`,\n                {\n                  [`${ns}Modal--${size}`]: size\n                },\n                className\n              )}\n            >\n              {overlay ? (\n                <div className={cx(`${ns}Modal-overlay`, fadeStyles[status])} />\n              ) : null}\n              <div\n                className={cx(\n                  `${ns}Modal-content`,\n                  contentClassName,\n                  fadeStyles[status]\n                )}\n              >\n                {children}\n              </div>\n            </div>\n          )}\n        </Transition>\n      </Portal>\n    );\n  }\n}\n\nexport default themeable(Modal);\n"]}